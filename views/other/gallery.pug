include ../includes/embed.pug 
include ../includes/style.pug

- const license = "https://creativecommons.org/licenses/by-nc-nd/4.0/";

html(lang="en")
    +embed(
        "Specky Gallery",
        "An epic art gallery",
        "https://specky.one/gallery",
        "https://specky.one/gallery/water.png",
        "#40FFFF"
    )

    #bg

    h1#title Specky Gallery

    #copyright_notice
        p(style="white-space: pre-line").
            These images were all made by Specky.
            The #[a(href=license) CC BY-NC-ND 4.0] license applies to all of these images.
            
            In a nutshell: 
            #[li if you share this art, provide credit (also the link to this website)]
            #[li do not use this art for commercial purposes]
            #[li do not modify this art]
        a(href=license)
            img.undraggable(
                src="https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/by-nc-nd.svg",
                style="width: 50%;"
            )

    div.grid
        for art in arts
            div.art(
                filename = art.filename,
                name = art.name,
                description = art.description,
                context = art.context,
                year = art.year,
            )
                img.undraggable(src=`/preview?image=gallery/${art.filename}`, loading="lazy")

script.
    function createCustomElement(tag = "p", text) {
        const doc = document.createElement(tag)
        if(text) doc.appendChild(document.createTextNode(text))
        return doc
    }

    function summonArticle(art) {
        const filename = art.getAttribute("filename");
        const name = art.getAttribute("name");
        const description = art.getAttribute("description");
        const context = art.getAttribute("context");
        const year = art.getAttribute("year");

        if(document.getElementById(filename)) return document.getElementById(filename);

        const article = document.createElement("article");
        article.setAttribute("id", filename)
        article.setAttribute("tabindex", "0")
        article.setAttribute("visible", "false")

        const children = [
            createCustomElement("h1", name),
            createCustomElement("h2", "Description"),
            createCustomElement("p", description),
            createCustomElement("h2", "Context"),
            createCustomElement("p", context),
            createCustomElement("p", `Made in ${year || new Date().getFullYear()}${year ? "" : " (year not confirmed)"}`),
            (()=>{
                const img = document.createElement("img");
                img.classList.add("undraggable");
                img.setAttribute("src", filename);
                return img
            })(),
        ]

        for(const child of children) article.appendChild(child)

        article.addEventListener("blur", event => {
            article.setAttribute("visible", "false")
        })

        document.body.appendChild(article)

        return article
    }

    for (const art of document.getElementsByClassName("art")) {
        art.addEventListener("click", async (event) => {
            const article = summonArticle(art);

            // this is for not setting the visibility to "true" instantaneously
            // if that happens, it would appear without a clean transition
            article.setAttribute("visible", "false")
            await new Promise(res => setTimeout(res, 0))
            
            article.setAttribute("visible", "true")
            article.focus()
        })
    }

style.
    #bg {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        margin: 0;
        border: 0;
        z-index: -10;
        background-color: #40FFFF;      
        background-image: linear-gradient(145deg, #FF00AA 0%, #40FFFF 50%, #00FFAA 100%);
    }

    #title {
        color: #000;
    }

    #copyright_notice {
        display: block;
        font-family: Arial;
        color: #000;
        left: 50%;
        width: fit-content;
        padding: 0px 10px 10px 10px;
        padding-color: #fff;
        margin: auto auto 15px auto;
        background: linear-gradient(125deg, #aaaaff, #ffaaff);
        border-style:solid;
        border-width:2px;
        border-color:black;
    }

    .grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        grid-gap: 5vh;
        margin: 0 auto;
        padding: 0;
        max-width: 90%;
        align-items: center;
        justify-content: center;
        text-align: center;
    }
    .art {
        display: flex;
        height: fit-content;
        min-width: 1fr;
        aspect-ratio: 1 / 1;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        background-color: #521;
        border: 10px solid #521;
        outline: 5px solid #FD0;
        padding-top: 100%
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        cursor: pointer;
    }
    .art img {
        width: 100%;
        height: auto;
    }

    .undraggable {
        /* https://stackoverflow.com/questions/12906789/preventing-an-image-from-being-draggable-or-selectable-without-using-js */
        user-drag: none;
        -webkit-user-drag: none;
        user-select: none;
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
    }

    article {
        position: fixed;
        width: 50vw;
        height: 100vh;
        top: 0;
        left: -50vw;
        opacity: 0;
        font-family: 'Helvetica', sans-serif;
        color: #CCBBAA;
        background-color: #112233;
        background: linear-gradient(69deg, #112233, #444444);
        transition: transform 500ms ease, opacity 750ms ease;
        z-index: 10;
        overflow-x: hidden;
    }

    article h1 {
        font-size: 2.5em;
    }

    article[visible="true"] {
        transform: translateX(100%);
        opacity: 1;
    }
    article[visible="false"] {
        transform: translateX(0%);
    }

    article img {
        max-width: 70%;
        padding: 1% 1% 1% 1%;
        margin-bottom: 50px;
        background-color: #000;
        border: 5px solid #FFF;
    }
