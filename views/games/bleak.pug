doctype html

head
    title Bleak Spot
    link(rel="icon" type="image/png" size="64" href="../assets/icon.png")

body
    h1 Bleak Spot
    h2 Move around with the arrow keys

    canvas#canvas(width=400 height=400)


script.
    // get canvas
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");

    let buttoms = {
        up: false,
        down: false,
        left: false,
        right: false,
    };

    // set up keyboard listener
    window.addEventListener("keydown", (e) => {
        switch (e.keyCode) {
            case 38:
                buttoms.up = true;
                break;
            case 40:
                buttoms.down = true;
                break;
            case 37:
                buttoms.left = true;
                break;
            case 39:
                buttoms.right = true;
                break;
        }
    });
    window.addEventListener("keyup", (e) => {
        switch (e.keyCode) {
            case 38:
                buttoms.up = false;
                break;
            case 40:
                buttoms.down = false;
                break;
            case 37:
                buttoms.left = false;
                break;
            case 39:
                buttoms.right = false;
                break;
        }
    });

    const player = {
        x: 100,
        y: 100,
        width: 50,
        height: 50,
        speed: 2,
        color: "#00FF00",
    };

    const enemy = {
        x: 200,
        y: 300,
        width: 20,
        height: 20,
        randomState: 0,
        speed: 2,
        color: "#FF0000",
    };

    const lastEnemyPositions = [];
    const smoothEnemy = 20;
    const enemyIterations = 50;

    setInterval(() => {
        ctx.fillStyle = "black";
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // update player position
        if (buttoms.up) player.y -= player.speed;
        if (buttoms.down) player.y += player.speed;
        if (buttoms.left) player.x -= player.speed;
        if (buttoms.right) player.x += player.speed;

        // fix player position
        if (player.x < 0) player.x = 0; // left
        if (player.x > canvas.width - player.width) player.x = canvas.width - player.width; // right
        if (player.y < 0) player.y = 0; // top
        if (player.y > canvas.height - player.height) player.y = canvas.height - player.height; // bottom
        
        // draw player
        ctx.fillStyle = player.color;
        ctx.fillRect(player.x, player.y, player.width, player.height);

        for (let i = 0; i < enemyIterations; i++) {
            // update enemy position with some advanced chaos
            enemy.randomState += Math.cos(enemy.x * enemy.y);
            enemy.x += Math.sin(enemy.randomState) * enemy.speed;
            enemy.y += Math.cos(enemy.randomState) * enemy.speed;
            if (enemy.x % 5 < 1) enemy.randomState += 0.5;
            if (enemy.y % 3 < 1) enemy.randomState -= 0.2;

            // fix enemy position
            if (enemy.x > canvas.width - enemy.width) enemy.x = canvas.width - enemy.width; // right
            if (enemy.y > canvas.height - enemy.height) enemy.y = canvas.height - enemy.height; // bottom
            if (enemy.x < 0) enemy.x = 0; // left
            if (enemy.y < 0) enemy.y = 0; // top
        }

        lastEnemyPositions.push({
            x: enemy.x,
            y: enemy.y,
        });
        if (lastEnemyPositions.length > smoothEnemy) lastEnemyPositions.shift();

        const length = lastEnemyPositions.length;
        const x = lastEnemyPositions.reduce((c,p) => c + p.x, 0) / length;
        const y = lastEnemyPositions.reduce((c,p) => c + p.y, 0) / length;

        // draw enemy
        ctx.fillStyle = enemy.color;
        ctx.fillRect(x, y, enemy.width, enemy.height);
    }, 1000 / 60);
